// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.5.0 hacker-room-new.glb -T
// Files: hacker-room-new.glb [34.62MB] > /Users/hsuwinlat/Desktop/jsm pj/threejscc-portfolio/public/models/hacker-room-new-transformed.glb [2.56MB] (93%)
// */

// import { useGLTF, useTexture } from "@react-three/drei";

// const HackerRoom = (props) => {
//   const { nodes, materials } = useGLTF("/models/hacker-room.glb");

//   const monitortxt = useTexture("textures/desk/monitor.png");
//   const screenTxt = useTexture("textures/desk/screen.png");

//   return (
//     <group {...props} dispose={null}>
//       <mesh
//         geometry={nodes.screen_screens_0.geometry}
//         material={materials.screens}
//       >
//         <meshMatcapMaterial map={screenTxt} />
//       </mesh>
//       <mesh
//         geometry={nodes.screen_glass_glass_0.geometry}
//         material={materials.glass}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_1.geometry}
//         material={materials.table_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_2.geometry}
//         material={materials.computer_mat}
//       >
//         <meshMatcapMaterial map={monitortxt} />
//       </mesh>
//       <mesh
//         geometry={nodes.table_table_mat_0_3.geometry}
//         material={materials.server_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_4.geometry}
//         material={materials.vhsPlayer_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_5.geometry}
//         material={materials.stand_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_6.geometry}
//         material={materials.mat_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_7.geometry}
//         material={materials.arm_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_8.geometry}
//         material={materials.tv_mat}
//       >
//         <meshMatcapMaterial map={monitortxt} />
//       </mesh>
//       <mesh
//         geometry={nodes.table_table_mat_0_9.geometry}
//         material={materials.cables_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_10.geometry}
//         material={materials.props_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_11.geometry}
//         material={materials.ground_mat}
//       />
//       <mesh
//         geometry={nodes.table_table_mat_0_12.geometry}
//         material={materials.key_mat}
//       />
//     </group>
//   );
// };
// useGLTF.preload("/models/hacker-room.glb");

// export default HackerRoom;

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: abdullahyeahyea (https://sketchfab.com/abdullahyeahyea)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-gaming-desk-6f1bc394de704e488d44e77134f23993
Title: Low Poly Gaming Desk
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";

const HackerRoom = (props) => {
  const { nodes, materials } = useGLTF("/models/hacker-room-2.glb");
  const monitorTexture = useTexture("/textures/desktop.png");
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.315}>
        <group rotation={[Math.PI / 1.8, 0, 0]}>
          <group position={[-1.145, -2.841, -1.506]} scale={[1, 1, 0.876]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_4.geometry}
              material={materials["Material.003"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_5.geometry}
              material={materials.Plastic}
            />
          </group>
          <group position={[-0.913, 0.552, -1.553]} scale={[0.523, 0.1, 0.339]}>
            <mesh
              name="monitor"
              castShadow
              receiveShadow
              geometry={nodes.Object_7.geometry}
              material={materials["7355608"]}
            >
              <meshStandardMaterial map={monitorTexture} />
            </mesh>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_8.geometry}
              material={materials.black}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_9.geometry}
              material={materials.blue_light}
            />
          </group>
          <group
            position={[-0.899, 0.474, -0.429]}
            rotation={[0, 0, -Math.PI]}
            scale={[-1.405, 0.024, 0.421]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_11.geometry}
              material={materials.blue_light}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_12.geometry}
              material={materials.black}
            />
          </group>
          <group
            position={[0.793, 0.465, -0.781]}
            scale={[0.114, 0.107, 0.204]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_14.geometry}
              material={materials.black}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_15.geometry}
              material={materials.blue_light}
            />
          </group>
          <group position={[-2.962, 1.463, -1.59]} scale={[0.438, 1, 1.09]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_17.geometry}
              material={materials.black}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_18.geometry}
              material={materials.blue_light}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_19.geometry}
              material={materials.Plastic}
            />
          </group>
          <group
            position={[0.888, 1.043, -1.684]}
            rotation={[-1.702, 0, Math.PI / 2]}
            scale={[-0.235, 0.037, 0.235]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_21.geometry}
              material={materials.black}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_22.geometry}
              material={materials.blue}
            />
          </group>
          <group position={[0.71, 0.474, -0.754]} scale={0.576}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_24.geometry}
              material={materials.Plastic}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_25.geometry}
              material={materials.blue_light}
            />
          </group>
        </group>
      </group>
    </group>
  );
};

useGLTF.preload("/models/hacker-room-2.glb");

export default HackerRoom;
